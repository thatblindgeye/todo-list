!function(){"use strict";const e={accessibilityContainer:document.querySelector("#accessibility-container"),animationSwitch:document.querySelector("#animation-switch"),githubLogo:document.querySelector("#lower-nav img"),themeSwitch:document.querySelector("#theme-switch")},t=()=>{localStorage.setItem("theme",document.documentElement.getAttribute("theme")),localStorage.setItem("animations-enabled",e.animationSwitch.getAttribute("aria-checked"))},n=((()=>{const n=e=>{"light"===document.documentElement.getAttribute("theme")?o():a(),t()},o=()=>{e.themeSwitch.setAttribute("aria-checked","false"),document.documentElement.setAttribute("theme","dark"),e.themeSwitch.style.backgroundPosition="center bottom -0.8rem",e.githubLogo.setAttribute("src","assets/images/logos/GitHub-Mark-Light-32px.png")},a=()=>{e.themeSwitch.setAttribute("aria-checked","true"),document.documentElement.setAttribute("theme","light"),e.themeSwitch.style.backgroundPosition="center top 2px",e.githubLogo.setAttribute("src","assets/images/logos/GitHub-Mark-32px.png")};e.themeSwitch.addEventListener("click",n),e.themeSwitch.addEventListener("keydown",(e=>{" "===e.key&&(e.preventDefault(),n())})),window.addEventListener("load",(()=>{"light"===localStorage.getItem("theme")?a():o()}))})(),(()=>{const n=()=>{"true"===e.animationSwitch.getAttribute("aria-checked")?a():o(),t()},o=()=>{e.animationSwitch.setAttribute("aria-checked","true"),document.documentElement.style.scrollBehavior="smooth",e.accessibilityContainer.style.transition="top 0.75s ease-in-out",e.animationSwitch.textContent="Animations Enabled",e.themeSwitch.style.transition="background-position 0.3s ease-in",document.querySelector("#main-nav").style.transition="left 0.5s",Array.from(document.querySelectorAll(".label-arrow")).forEach((e=>{e.style.transition="transform 0.75s"}))},a=()=>{e.animationSwitch.setAttribute("aria-checked","false"),document.documentElement.style.scrollBehavior="auto",e.animationSwitch.setAttribute("aria-checked","false"),e.animationSwitch.textContent="Animations Disabled",Array.from(document.querySelectorAll(".animated")).forEach((e=>{e.style.transition="none"}))};return e.animationSwitch.addEventListener("click",n),e.animationSwitch.addEventListener("keydown",(e=>{" "===e.key&&(e.preventDefault(),n())})),window.addEventListener("load",(()=>{"false"===localStorage.getItem("animations-enabled")?a():o()})),{animationsEnabled:o,animationsDisabled:a}})()),o={addGroupBtn:document.querySelector(".add-group-btn"),defaultGroups:["Important","Next 7 Days","Later","Eventually"],groupButtons:document.getElementsByClassName("group-btn"),groupOptionBtn:document.querySelector(".group-option-btn"),modalBox:document.querySelector(".modal-box"),modalContainer:document.querySelector(".modal-container"),selectedGroup:document.querySelector(".selected-group")},a=(()=>{const e=()=>{for(;o.modalBox.firstChild;)o.modalBox.removeChild(o.modalBox.firstChild);o.modalContainer.style.display="none",o.modalBox.dataset.indexRef="",o.modalBox.dataset.groupRef=""};return window.addEventListener("keydown",(t=>{"Escape"===t.key&&e()})),{createCloseBtn:()=>{const e=document.createElement("button");e.setAttribute("type","button"),e.setAttribute("aria-label","Close modal"),e.classList.add("modal-close-button","close-btn","focusable"),e.addEventListener("click",a.onClose),o.modalBox.appendChild(e)},onClose:e,onOpen:()=>{o.modalContainer.style.display="flex",document.querySelector(".modal-close-button").focus()}}})(),l=((()=>{const e=e=>{e.target.classList.contains("disable-button")?n.animationsDisabled():e.target.classList.contains("enable-button")&&n.animationsEnabled(),t(),a.onClose()};window.addEventListener("load",(()=>{0===localStorage.length&&(()=>{const t=document.createElement("h1"),n=document.createElement("p"),a=document.createElement("p"),l=document.createElement("button"),r=document.createElement("button");t.textContent="This site uses minimal animation effects.",n.textContent="Effects include moving menus and smooth scrolling. If you suffer from a vestibular disorder or otherwise prefer no animations, you can turn them off by clicking the first button below.",a.textContent="You can later change this setting in the Display & Accessibility tab at the top of the page.",l.setAttribute("type","button"),l.classList.add("disable-button","focusable","primary-btn"),l.textContent="DISABLE ANIMATIONS",l.addEventListener("click",e),r.setAttribute("type","button"),r.classList.add("enable-button","focusable","secondary-btn"),r.textContent="ENABLE ANIMATIONS",r.addEventListener("click",e),o.modalBox.appendChild(t),o.modalBox.appendChild(n),o.modalBox.appendChild(a),o.modalBox.appendChild(l),o.modalBox.appendChild(r),o.modalContainer.style.display="flex"})()}))})(),(()=>{const e=e=>{const t=document.createElement("form"),n=document.createElement("fieldset"),l=document.createElement("legend"),r=document.createElement("div"),s=document.createElement("label"),i=document.createElement("input"),c=document.createElement("input");if(a.createCloseBtn(),s.setAttribute("for","name-input"),s.textContent="Group Name",i.setAttribute("type","text"),i.setAttribute("required","true"),i.setAttribute("id","name-input"),i.setAttribute("autocomplete","off"),i.classList.add("focusable"),e.target.classList.contains("add-group-btn"))l.textContent="Add a Group",c.setAttribute("type","submit"),c.setAttribute("value","ADD GROUP"),c.classList.add("submit-group-btn","primary-btn","focusable","submit"),r.appendChild(c);else if(e.target.classList.contains("group-option-btn")){const e=document.createElement("button"),t=document.createElement("button");l.textContent="Group Options",c.setAttribute("type","submit"),c.setAttribute("value","UPDATE"),c.classList.add("update-group-btn","secondary-btn","focusable","submit"),e.setAttribute("type","button"),e.classList.add("delete-group-btn","delete-btn","focusable"),e.textContent="DELETE GROUP",t.setAttribute("type","button"),t.classList.add("delete-completed-btn","delete-btn","focusable"),t.textContent="DELETE COMPLETED TASKS",o.defaultGroups.indexOf(o.selectedGroup.textContent)>=0&&(s.style.opacity="0.38",i.setAttribute("disabled","true"),i.style.opacity="0.38",c.setAttribute("disabled","true"),c.style.opacity="0.38",e.setAttribute("disabled","true"),e.style.opacity="0.38"),r.appendChild(c),r.appendChild(e),r.appendChild(t)}n.appendChild(l),n.appendChild(s),n.appendChild(i),n.appendChild(r),t.appendChild(n),o.modalBox.appendChild(t)};o.groupOptionBtn.addEventListener("click",(t=>{e(t),a.onOpen()})),o.addGroupBtn.addEventListener("click",(t=>{e(t),a.onOpen()}))})(),{render:(e,t)=>{const n=document.createElement("form"),l=document.createElement("fieldset"),r=document.createElement("legend"),s=document.createElement("div"),i=document.createElement("label"),c=document.createElement("input"),d=document.createElement("label"),u=document.createElement("select"),m=document.createElement("label"),p=document.createElement("select"),b=document.createElement("option"),h=document.createElement("option"),y=document.createElement("label"),g=document.createElement("input"),f=document.createElement("label"),C=document.createElement("textarea");a.createCloseBtn(),i.setAttribute("for","name-input"),i.textContent="Task Name (required)",c.setAttribute("type","text"),c.setAttribute("id","name-input"),c.setAttribute("placeholder","Enter a task name"),c.setAttribute("required","true"),c.setAttribute("autocomplete","off"),c.className="focusable",d.setAttribute("for","group-select"),d.textContent="Group",u.setAttribute("id","group-select"),u.className="focusable";for(let e=0;e<t.length;e++){const n=document.createElement("option");n.setAttribute("value",t[e]),n.textContent=t[e],u.appendChild(n)}if(m.setAttribute("for","priority-select"),m.textContent="Priority",p.setAttribute("id","priority-select"),p.className="focusable",b.textContent="Normal",h.textContent="Important",p.appendChild(b),p.appendChild(h),y.setAttribute("for","date-select"),y.textContent="Due Date (optional)",g.setAttribute("type","date"),g.setAttribute("id","date-select"),g.className="focusable",f.setAttribute("for","notes-input"),f.textContent="Additional Notes",C.setAttribute("id","notes-input"),C.setAttribute("placeholder","Enter any additional notes for the task"),C.className="focusable",e.target.textContent.includes("ADD TASK")){const e=document.createElement("input"),t=document.createElement("input");r.textContent="Add a Task",e.setAttribute("type","submit"),e.setAttribute("value","ADD ONE"),e.setAttribute("aria-label","Add task and close modal"),e.classList.add("add-single-btn","primary-btn","submit","focusable"),t.setAttribute("type","submit"),t.setAttribute("value","ADD MANY"),t.setAttribute("aria-label","Add task and keep modal open"),t.classList.add("add-many-btn","secondary-btn","submit","focusable"),s.appendChild(e),s.appendChild(t)}else if("EDIT"===e.target.textContent){const e=document.createElement("input");r.textContent="Edit Task",u.setAttribute("disabled","true"),d.style.opacity="0.38",u.style.opacity="0.38",e.setAttribute("type","submit"),e.setAttribute("value","UPDATE"),e.setAttribute("aria-label","Update task and close modal"),e.classList.add("update-task-btn","primary-btn","focusable"),s.appendChild(e)}l.appendChild(r),l.appendChild(i),l.appendChild(c),l.appendChild(d),l.appendChild(document.createElement("br")),l.appendChild(u),l.appendChild(document.createElement("br")),l.appendChild(m),l.appendChild(document.createElement("br")),l.appendChild(p),l.appendChild(document.createElement("br")),l.appendChild(y),l.appendChild(document.createElement("br")),l.appendChild(g),l.appendChild(document.createElement("br")),l.appendChild(f),l.appendChild(C),l.appendChild(s),n.appendChild(l),o.modalBox.appendChild(n)}}),r=(()=>{const e=document.querySelector(".groups-container");return{customGroups:document.querySelector(".custom-groups-container"),menu:e,tasksList:document.querySelector(".task-container")}})(),s={render:e=>{(()=>{for(;r.customGroups.firstChild;)r.customGroups.removeChild(r.customGroups.firstChild)})(),Object.keys(e).forEach((e=>{const t=document.createElement("button");t.setAttribute("type","button"),t.setAttribute("aria-label",`Group name: ${e}`),t.classList.add("custom-group","focusable","group-btn"),t.textContent=e,r.customGroups.appendChild(t)}))}},i=(()=>{const e=document.getElementById("main-nav");return{defaultGroups:["Important","Next 7 Days","Later","Eventually"],groupButtons:document.getElementsByClassName("group-btn"),nav:e,modalBox:document.querySelector(".modal-box"),selectedGroup:document.querySelector(".selected-group"),taskItems:document.getElementsByClassName("task-item")}})(),c=(()=>{const e=JSON.parse(localStorage.getItem("toDo-list"))||{Example:[{taskName:"Do the dishes",completed:!1,priority:"Normal",dueDate:"",notes:"Let the pans soak, put the plates in the dishwasher, wash the mugs by hand.\n\nWash pans after 30 minutes soaking."},{taskName:"Bring Muffin to vet",completed:!1,priority:"Important",dueDate:"2021-03-05",notes:"Pack her favorite toy so she stays calm."}]};return window.addEventListener("load",(t=>{s.render(e)})),{list:e,saveToLocal:()=>{localStorage.setItem("toDo-list",JSON.stringify(e))}}})(),d=(()=>{const e=e=>{c.list[e.dataset.group].splice(e.dataset.index,1),e.remove(),console.log(c.list)},t=e=>{const t=e.dataset.group,n=e.dataset.index;null===e.children[1].getAttribute("style")?(c.list[t][n].completed=!0,e.children[1].style.backgroundImage="url(assets/images/icons/done-black-24dp.svg)"):(c.list[t][n].completed=!1,e.children[1].removeAttribute("style")),console.log(c.list)};return document.querySelector(".add-task-btn").addEventListener("click",(e=>{0!==Object.keys(c.list).length?(l.render(e,Object.keys(c.list)),a.onOpen()):alert("No group exists to add tasks to.\n\nPlease create a group before adding a task.")})),Array.from(i.taskItems).forEach((n=>{n.addEventListener("click",(n=>{switch(n.target){case n.currentTarget.children[1]:t(n.currentTarget);break;case n.currentTarget.children[2]:n.currentTarget.children[4].classList.toggle("expanded");break;case n.currentTarget.children[4].children[1]:l.render(n,Object.keys(c.list)),(e=>{const t=e.dataset.group,n=e.dataset.index;i.modalBox.dataset.indexRef=n,i.modalBox.dataset.groupRef=t,document.querySelector("#name-input").value=c.list[t][n].taskName,document.querySelector("#group-select").value=t,document.querySelector("#priority-select").value=c.list[t][n].priority,document.querySelector("#date-select").value=c.list[t][n].dueDate,document.querySelector("#notes-input").value=c.list[t][n].notes})(n.currentTarget),a.onOpen();break;case n.currentTarget.children[4].children[2]:confirm(`Please click "OK" to confirm deletion of task "${n.currentTarget.children[2].textContent}".`)&&e(n.currentTarget);break;default:return}}))})),Array.from(i.taskItems).forEach((e=>{e.addEventListener("keydown",(e=>{" "===e.key&&(e.preventDefault(),e.target===e.currentTarget.children[1]?t(e.currentTarget):e.target===e.currentTarget.children[2]&&e.currentTarget.children[4].classList.toggle("expanded"))}))})),{confirmMassRemove:()=>i.defaultGroups.indexOf(i.selectedGroup.textContent)>=0?confirm('This will delete all completed tasks in every group.\n\nPlease click "OK" to confirm deletion.'):confirm(`This will delete all completed tasks in the ${i.selectedGroup.textContent} group.\n\nPlease click "OK" to confirm deletion.`),create:(e,t,n,o,a)=>({taskName:e,priority:t,dueDate:n,notes:o,completed:a}),update:()=>{const e=i.modalBox.getAttribute("data-group-ref"),t=i.modalBox.getAttribute("data-index-ref");c.list[e][t].taskName=document.querySelector("#name-input").value,c.list[e][t].priority=document.querySelector("#priority-select").value,c.list[e][t].dueDate=document.querySelector("#date-select").value,c.list[e][t].notes=document.querySelector("#notes-input").value},removeCompleted:e=>{if(i.defaultGroups.indexOf(e)>=0){const e=Object.keys(c.list);Object.values(c.list).forEach(((t,n)=>{for(let o=t.length-1;o>=0;o--)!0===t[o].completed&&c.list[e[n]].splice(o,1)}))}else c.list[e].forEach((t=>{for(let n=c.list[e].length-1;n>=0;n--)!0===t.completed&&c.list[e].splice(n,1)}))},removeSingle:e,checkName:e=>e.match(/^\s{1,}$/)||""===e}})(),u=(i.nav.addEventListener("click",(e=>{e.target.classList.contains("group-btn")&&(Array.from(i.groupButtons).forEach((e=>{e.classList.remove("active")})),e.target.classList.add("active"))})),{create:e=>{c.list[e]=[],console.log(c.list)},update:(e,t)=>{delete Object.assign(c.list,{[t]:c.list[e]})[e],console.log(c.list)},remove:e=>{delete c.list[e],console.log(c.list)},checkName:e=>i.defaultGroups.indexOf(e)>=0||Object.keys(c.list).indexOf(e)>=0||e.match(/^\s{1,}$/)||""===e});i.modalBox.addEventListener("click",(e=>{const t=document.querySelector("#name-input");switch(e.target){case document.querySelector(".submit-group-btn"):case document.querySelector(".update-group-btn"):if(e.preventDefault(),u.checkName(t.value))return void alert("Group name cannot be blank and cannot already be taken.\n\nPlease enter a new name.");e.target.classList.contains("submit-group-btn")?u.create(t.value):u.update(i.selectedGroup.textContent,t.value),a.onClose(),s.render(c.list);break;case document.querySelector(".delete-group-btn"):confirm(`This will delete the ${i.selectedGroup.textContent} group, along with any tasks within it.\n\nPlease click "OK" to confirm deletion.`)&&(u.remove(i.selectedGroup.textContent),a.onClose(),s.render(c.list));break;case document.querySelector(".delete-completed-btn"):d.confirmMassRemove()&&(d.removeCompleted(i.selectedGroup.textContent),a.onClose(),console.log(c.list));break;case document.querySelector(".add-single-btn"):case document.querySelector(".add-many-btn"):const n=document.querySelector("#group-select");if(e.preventDefault(),d.checkName(t.value))return void alert("Task name cannot be blank.\n\nPlease enter a new name.");{const o=d.create(t.value,document.querySelector("#priority-select").value,document.querySelector("#date-select").value,document.querySelector("#notes-input").value,!1);c.list[n.value].push(o),e.target.classList.contains("add-many-btn")?(t.focus(),t.value="",n.selectedIndex=0,document.querySelector("#priority-select").value="Normal",document.querySelector("#date-select").value="",document.querySelector("#notes-input").value=""):a.onClose(),console.log(c.list)}break;case document.querySelector(".update-task-btn"):if(e.preventDefault(),d.checkName(t.value))return void alert("Task name cannot be blank.\n\nPlease enter a new name.");d.update(),a.onClose(),console.log(c.list);break;default:return}})),console.log(c.list);const m={menuContainer:document.querySelector("#main-nav"),menuOpenButton:document.querySelector(".menu-button"),menuCloseButton:document.querySelector(".menu-close-button")};(()=>{const e=()=>{document.documentElement.scrollWidth>763?(m.menuContainer.style.visibility="visible",m.menuContainer.style.left="0"):(m.menuContainer.style.visibility="hidden",m.menuContainer.style.left="-800px")};window.addEventListener("resize",e),window.addEventListener("load",e);const t=()=>{"hidden"===m.menuContainer.style.visibility?(m.menuContainer.style.visibility="visible",m.menuContainer.style.left="0",m.menuCloseButton.focus()):(m.menuContainer.style.left="-800px",setTimeout((()=>{m.menuContainer.style.visibility="hidden"}),600),m.menuOpenButton.focus())};m.menuOpenButton.addEventListener("click",t),m.menuCloseButton.addEventListener("click",t)})()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,